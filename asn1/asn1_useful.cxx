//
// asn1_useful.cpp
//
// Code automatically generated by asnparser.
//

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include "asn1_useful.h"



namespace ASN1 {

//
// EXTERNAL_encoding
//


const void* EXTERNAL_encoding::selectionInfos[3] = {
    &single_ASN1_type::value_type::theInfo,
    &octet_aligned::value_type::theInfo,
    &arbitrary::value_type::theInfo
};

unsigned EXTERNAL_encoding::selectionTags[3] = {
    0xa0000000,
    0x80000001,
    0x80000002
};

const char* EXTERNAL_encoding::selectionNames[3] = {
    "single-ASN1-type",
    "octet-aligned",
    "arbitrary"
};

const EXTERNAL_encoding::InfoType EXTERNAL_encoding::theInfo = {
    ASN1::CHOICE::create,
    0x00000000,
    0,
    false,
    EXTERNAL_encoding::selectionInfos,
    3, 3,
    EXTERNAL_encoding::selectionTags,
    EXTERNAL_encoding::selectionNames
};

//
// EXTERNAL
//


const void* EXTERNAL::fieldInfos[4] = {
    &direct_reference::value_type::theInfo,
    &indirect_reference::value_type::theInfo,
    &data_value_descriptor::value_type::theInfo,
    &encoding::value_type::theInfo
};

int EXTERNAL::fieldIds[4] = {
    0,
    1,
    2,
    -1,
};

const char* EXTERNAL::fieldNames[4] = {
    "direct-reference",
    "indirect-reference",
    "data-value-descriptor",
    "encoding"
};

const EXTERNAL::InfoType EXTERNAL::theInfo = {
    EXTERNAL::create,
    0x00000008,
    0,
    false,
    EXTERNAL::fieldInfos,
    EXTERNAL::fieldIds,
    4, 0, 3,
    NULL,
    &EXTERNAL::defaultTag,
    EXTERNAL::fieldNames
};

ABSTRACT_SYNTAX::info_type::info_type()
{
  m_Type= NULL;
}

} // namespace ASN1

// End of asn1_useful.cpp
